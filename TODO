
Makefile:
------------

* `arduino-cli board list` will list all attached boards.
  If BOARD is not set, parse this and get the attached board for the specified serial port.

Debugger:
------------

On-device service capabilities:
  * SAMD: Implement 'monitor mode debugging'. see e.g.:
  https://github.com/NordicPlayground/j-link-monitoring-mode-debugging
  https://interrupt.memfault.com/blog/cortex-m-debug-monitor


Client:

  * dwarf info: CUNS.add_entry() takes a 'name' field which we use for name->typ mapping.
    If this names a member function with the same name as its containing class, we may have
    a conflict. We need to either retain only fully-canonicalized names ('typ.name') OR only
    retain nesting-level-0 names at the CUNS name level. See comment at types.py, line 222.

  * Use `arduino-cli board list` to autodetect the attached board for the specified serial port.

  * breakpoint.Breakpoint() needs ability to register a hw addr as discovered in
    __acknowledge_pause(). nb that the literal BKPT instruction inside __dbg_break() is not
    helpful; we need the 'real' $PC from entering the breakpoint method in order to register
    break sites.

  * 'step' command should report the newly-stepped-to $PC.
    (May require implementing "debugger service stack frame hiding")

  --------

  * ARM: r12 actually seems to be a clobber register?

  * ARM: When returning from interrupt, $LR has a bunch of special flag values that do things like
    switch between $MSP and $PSP. We should parse these and operate on the appropriate stack.
    * As well as update correct MSP/PSP in ARMThumbArchInterface.finish_register_unwind().

  * Can we implement a 'setlocal' ?
    * Would need to use call frame info to determine where on the stack it lives...
      or where on the stack frame above the local the register got saved.
    * This would be very tricky for frames below #0; especially if the register is live/implicit
      in the current frame, it could make the current frame have undefined behavior. If it was
      pushed on the stack but not in frame 'n-1' then it could cause undefined behavior in that
      intermediate frame.

  * types.py should handle union type? bit fields?
  * Filter __dbg_service, __vector17, TC4_Handler out of stack trace report and `frame` commands?

  * add notion of "current frame" that can be adjusted rather than just as immediate arg
    to `frame` / `\f`, locals, etc?

  * Optionally embed ELF file in core dump file, for all-in-one dump file w/o separate .elf.

SAM D51 support: (See Cortex-M4 Technical Reference Manual)
* Breakpoint unit support
  * Create HW breakpoint
  * Delete HW breakpoint
  * Disable/enable HW breakpoint
* Watchpoint unit support
* Single-step support


