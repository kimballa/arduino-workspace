
Makefile:
------------

* `arduino-cli board list` will list all attached boards.
  If BOARD is not set, parse this and get the attached board for the specified serial port.

Debugger:
------------

On-device service capabilities:

  SAM D51 support: (See Cortex-M4 Technical Reference Manual)
  * Breakpoint unit support
    * Create HW breakpoint
    * Delete HW breakpoint
    * Disable/enable HW breakpoint
  * Watchpoint unit support

Client:

  * Use `arduino-cli board list` to autodetect the attached board for the specified serial port.

  * breakpoint.Breakpoint() needs ability to register a hw addr as discovered in
    __acknowledge_pause(). nb that the literal BKPT instruction inside __dbg_break() is not
    helpful; we need the 'real' $PC from entering the breakpoint method in order to register
    break sites.

  --------

  * Add formatted print keywords:
      `print/d`, `print/b`, `print/x` for integers.
      `print/a`, `print/u`, `print/d`, `print/x` for strings in ascii, utf8, or dec/hex byte vals.

      ... should these modifiers also apply to 'locals' and 'frame' ?
      At minimum they need to also apply to 'info'.

  * Can we implement a 'setlocal' ?
    * Would need to use call frame info to determine where on the stack it lives...
      or where on the stack frame above the local the register got saved.
    * This would be very tricky for frames below #0; especially if the register is live/implicit
      in the current frame, it could make the current frame have undefined behavior. If it was
      pushed on the stack but not in frame 'n-1' then it could cause undefined behavior in that
      intermediate frame.

  * types.py should handle bit fields?

  * add notion of "current frame" that can be adjusted rather than just as immediate arg
    to `frame` / `\f`, locals, etc?

  * Optionally embed ELF file in core dump file, for all-in-one dump file w/o separate .elf.


