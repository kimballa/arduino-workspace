
Makefile:
------------

* `arduino-cli board list` will list all attached boards.
  If BOARD is not set, parse this and get the attached board for the specified serial port.

Debugger:
------------

On-device service capabilities:
  * SAMD: Implement 'monitor mode debugging'. see e.g.:
  https://github.com/NordicPlayground/j-link-monitoring-mode-debugging
  https://interrupt.memfault.com/blog/cortex-m-debug-monitor


Client:

  * Use `arduino-cli board list` to autodetect the attached board for the specified serial port.
  * Cannot parse SAMD51-compiled empty.elf
  * All uses of $PC need ARM-specific PC cleansing (0 the LSB), separate from AVR-style PC cleansing
    ($PC = $PC' << 1).

  --------

  * Can we implement a 'setlocal' ?
    * Would need to use call frame info to determine where on the stack it lives...
      or where on the stack frame above the local the register got saved.
    * This would be very tricky for frames below #0; especially if the register is live/implicit
      in the current frame, it could make the current frame have undefined behavior. If it was
      pushed on the stack but not in frame 'n-1' then it could cause undefined behavior in that
      intermediate frame.

  * types.py should handle union type? bit fields?
  * Filter __dbg_service and __vector17 out of stack trace report and `frame` commands?

  * add notion of "current frame" that can be adjusted rather than just as immediate arg
    to `frame` / `\f`, locals, etc?

  * Optionally embed ELF file in core dump file, for all-in-one dump file w/o separate .elf.

SAM D21 support: (See Cortex-M0+ Technical Reference Manual)
* Breakpoint unit support
  * Create HW breakpoint
  * Delete HW breakpoint
  * Disable/enable HW breakpoint
  * ... should DBGBREAK() use `BKPT` instr on ARM? By invoking the debug mon irq, we can then
    do a proper single-step from there.
  * ... timer-irq-driven breaks need a way to 'kick off' single-step such that it gets back
    to the bottom of the timer irq fn, enables single-step mode, and then returns from the irq
    to execute the 1 opcode. __dbg_service() probably needs to return a value or set a status flag
    checked in the irq fn.
* Watchpoint unit support
* Single-step support
* ... cleaner backtrace via ARM-standard frame pointer record walking.


