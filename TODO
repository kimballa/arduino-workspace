
Makefile:
------------


Debugger:
------------

* client: `set` should format list[int] in dec or hex based on caps just like literal int.
  (same in dicts)
* Filter __dbg_service and __vector17 out of stack trace report and `frame` commands?

NewhavenLcd0440::_scrollScreen() sets up a more complex stack frame than other examples.
It begins with a series of normal push operations:
    1778:       6f 92           push    r6
    177a:       7f 92           push    r7
...

And then proceeds to allocate a large scratch buffer:
    1794:       cd b7           in      r28, 0x3d       ; 61 # Read SP into Y
    1796:       de b7           in      r29, 0x3e       ; 62
    1798:       a8 97           sbiw    r28, 0x28       ; 40 # Y = Y - 28h
    179a:       0f b6           in      r0, 0x3f        ; 63 # temp: hang onto SREG
    179c:       f8 94           cli                          # pause interrupts
    179e:       de bf           out     0x3e, r29       ; 62 # SPH <- Yh
    17a0:       0f be           out     0x3f, r0        ; 63 # Restore SREG/interrupt status
    17a2:       cd bf           out     0x3d, r28       ; 61 # SPL <- Yl

... To perform stack unwind, we need to:
* Permit cli/sei in prologue
* Recognize the pattern: `in rX, 0x3d/3e` <-- reading SP
* Recognize `sbiw rX, imm` <-- imm extends frame size
* Recognize `out 0x3d/3e` <-- confirm imm extends frame size.
* Permit `out` in prologue, generally.

On-device service capabilities:

Client:

  * Remove / [clone .constprop.*]$/ from demangled names.
  * Better command-specific 'help' text


SAM D21 support: (See Cortex-M0+ Technical Reference Manual)
* Breakpoint unit support
* Watchpoint unit support
* Single-step support 
* ... cleaner backtrace via ARM-standard frame pointer record walking.


Current stats: 
     9660 data, 514 RAM
     9714 / 514 (wdt.h, reset)
     9826 / 514 (length byte and STACKREL)
     9880 / 514 (poke)
    12016 / 576 (stacktrace) <<*with instrumentation; 9998/534 without>>
    11750 / 546 (gpio; more selective stacktrace instrumentation; *10114/534)
    11838 / 552 (memory usage reporting; *10192/540)
    11838 / 552 *v1.0*
    12870 / 572 (with dual call stack) <-- Extra size is 18 bytes / fn o.h. of including call_site.
    12708 / 572 optimized instrumentation
    10124 / 520 *v2.0* - removed need for instrumentation to capture stack traces.


empty program:  3896 / 150
with dbg-gpio:  5564 / 173 (+1668)
instrumented:   5900 / 173
dbg-memusage:   5952 / 179 (*5618/179)
no instrument:  5566 / 159 (real stack walking)


Minimum debugger o.h. is 1670 flash, 9 sram bytes.

